@page "/personas"

@using BlazorWebAssembly.Shared.CapaEntities.ViewModels.Request;
@using BlazorWebAssembly.Shared.CapaEntities.ViewModels.Response;
@using BlazorWebAssembly.Shared.CapaServices.BusinessLogic.ClientServices;

@inject IPersona servicioPersona
@inject NavigationManager NavigationManager

<PageTitle>Lista de Personas</PageTitle>

<h3>Lista de Personas</h3>

<div class="row">
    <div class="col-12">
        <MudButton Variant="Variant.Filled" Color="Color.Tertiary" Href="personaForm">Nuevo</MudButton>
    </div>
</div>

@if (oResponse == null)
{
    <p><em>Cargando...</em></p>
}
else
{
    <table class="table table-bordered table-hover table-responsive table-striped">
        <tr>
            <th>Id</th>
            <th>Nombre</th>
            <th>Edad</th>
            <th>Email</th>
            <th>Fecha de Alta</th>
            <th>Acciones</th>
        </tr>

        @if (oResponse != null && oResponse.Data != null)
        {
            @foreach (var oElement in oResponse.Data)
            {
                <tr>
                    <td>@oElement.IdPersona</td>
                    <td>@oElement.PerNombre</td>
                    <td>@oElement.PerEdad</td>
                    <td>@oElement.PerEmail</td>
                    <td>@oElement.PerFechaAlta</td>
                    <td>
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick="@(() => NavigationManager.NavigateTo("/personaForm/" +  @oElement.IdPersona))">Editar</MudButton>
                        <MudButton Variant="Variant.Filled" Color="Color.Secondary" @onclick="@(() => NavigationManager.NavigateTo("/eliminarPersona/" +  @oElement.IdPersona))">Eliminar</MudButton>
                    </td>
                </tr>
            }
        }
    </table>
}

@code
{
    public string url = "/api/Personas";

    public Response<List<TbPersonaViewModel>> oResponse = new();

    protected override async Task OnInitializedAsync() => oResponse = await servicioPersona.GetDataAsync(url);
}
